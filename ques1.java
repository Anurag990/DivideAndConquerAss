package DivideAndConquer;import java.util.*;public class ques1 {    public static void sortSwappedArray(int[] nums) {        int n = nums.length;        // Find the first element that is greater than the next element        int firstSwapIndex = -1;        for (int i = 0; i < n - 1; i++) {            if (nums[i] > nums[i + 1]) {                firstSwapIndex = i;                break;            }        }        // If the array is already sorted, no need to swap        if (firstSwapIndex == -1) {            return;        }        // Find the last element that is smaller than the previous element        int secondSwapIndex = -1;        for (int i = n - 1; i > 0; i--) {            if (nums[i] < nums[i - 1]) {                secondSwapIndex = i;                break;            }        }        // Swap the two identified elements        int temp = nums[firstSwapIndex];        nums[firstSwapIndex] = nums[secondSwapIndex];        nums[secondSwapIndex] = temp;    }    public static void main(String[] args) {        int[] nums = {1, 5, 3, 4, 2, 6};        System.out.println("Original Array: " + Arrays.toString(nums));        sortSwappedArray(nums);        System.out.println("Sorted Array: " + Arrays.toString(nums));    }}