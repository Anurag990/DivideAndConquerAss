package DivideAndConquer;import java.util.*;public class ques2 {    public static void segregatePositiveNegative(int[] nums) {        int n = nums.length;        // Initialize two pointers        int left = 0;        int right = n - 1;        while (left <= right) {            // Move left pointer to the first positive number            while (left < n && nums[left] < 0) {                left++;            }            // Move right pointer to the first negative number            while (right >= 0 && nums[right] >= 0) {                right--;            }            // Swap positive and negative numbers            if (left < right) {                int temp = nums[left];                nums[left] = nums[right];                nums[right] = temp;            }        }    }    public static void main(String[] args) {        int[] nums = {19, -20, 7, -4, -13, 11, -5, 3};        System.out.println("Original Array: " + Arrays.toString(nums));        segregatePositiveNegative(nums);        System.out.println("Segregated Array: " + Arrays.toString(nums));    }}